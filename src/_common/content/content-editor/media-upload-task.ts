import { ref, shallowRef } from 'vue';
import { ContentEditorController } from './content-editor-controller';

/**
 * Represents a media upload within a content editor. It's mostly a state
 * container so that the app and web can both report upload progress.
 */
export type MediaUploadTask = ReturnType<typeof createMediaUploadTask>;

export function createMediaUploadTask(
	editorController: ContentEditorController,
	uploadId: string,
	options: {
		thumbnail?: string;
		file?: File;
	} = {}
) {
	const thumbnail = ref(options.thumbnail);
	const file = shallowRef(options.file);

	const progress = ref(0);

	/**
	 * Whether or not we're currently processing the file after it's been fully
	 * uploaded.
	 */
	const isProcessing = ref(false);

	// Try to get a preview of this image to show while it's uploading. Only
	// preview the image if it's smaller than 5 Mb.
	//
	// Note that the thumbnail will be generated by mobile app content
	// editor outside of here and then passed in, so we don't need to grab
	// it in all cases.
	if (file.value && !thumbnail.value && file.value.size < 5_000_000) {
		const reader = new FileReader();
		reader.onloadend = () => {
			if (reader.result !== null) {
				thumbnail.value = reader.result.toString();
			}
		};
		reader.readAsDataURL(file.value);
	}

	function updateProgress(newProgress: number) {
		progress.value = newProgress;
		if (progress.value >= 1) {
			progress.value = 1;
			isProcessing.value = true;
		}
	}

	return {
		editorController,
		uploadId,
		thumbnail,
		progress,
		file,
		isProcessing,
		updateProgress,
	};
}
